#include <iostream>
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <string>
 
void dfs(int& timer, std::vector<int>& tin, std::vector<int>& tout, std::vector<std::vector<int>>& g, std::vector<int>& color, int v){
    tin[v] = timer++;
    for (int to : g[v]) {
        if (color[to] != 0) continue;
        else {
            dfs(timer, tin, tout, g, color, to);
        }
    }
    tout[v] = timer++;
    color[v] = 2;
}
 
int main()
{
    int n;
    std::cin >> n;
    std::vector<std::vector<int>> g(n + 1);
    for (int i = 1; i <= n; i++) {
        int x;
        std::cin >> x;
        g[x].push_back(i);
    }
    int m;
    std::cin >> m;
    std::vector<int> color(n + 1, 0);
    std::vector<int> tin(n + 1, 0);
    std::vector<int> tout(n + 1, 0);
    int timer = 0;
    for (int node : g[0]) {
        dfs(timer, tin, tout, g, color, node);
    }
    for (int i = 0; i < m; i++) {
        int x, y;
        std::cin >> x >> y;
        if (tin[x] < tin[y] && tout[y] < tout[x]) {
            std::cout << 1<< '\n';
        }
        else {
            std::cout << 0 << '\n';
        }
    }
    return 0;
}
